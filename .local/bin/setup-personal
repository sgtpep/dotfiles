#!/bin/bash
set -eu

email=mail'@'danil.mobi
hostname=danil.mobi
letsencrypt=/etc/letsencrypt
root=/var/www/html

function run-actions {
  local action=$1

  local rsync=(rsync -FOahvz --progress)
  local path=~/Downloads/personal

  [[ $action != backup ]] || exec "${rsync[@]}" --delete personal: "$path"
  [[ $action != restore ]] || exec "${rsync[@]}" -u "$path"/ personal:

  return 1
}

function setup-user {
  local directory=.ssh
  ! ssh personal "[[ -d $directory ]]" || return 0

  local timezone=$(readlink /etc/localtime | sed 's|^/usr/share/zoneinfo/||')
  local user=danil
  local password=$(sudo grep -Po "(?<=^$user:)[^:]+" /etc/shadow)

  ssh root@personal "$SHELL" -"$-" << EOF
  timedatectl set-timezone "$timezone"

  id "$user" &> /dev/null || useradd -m -G sudo -s "\$SHELL" "$user"
  chpasswd -e <<< "$user:$password"

  cp -r "$directory" ~$user
  chown -R "$user": ~$user/"$directory"
EOF
}

function run-script {
  local script=$(< "${BASH_SOURCE[0]}")
  ssh -t personal "set -$-; $script"
}

function configure-apt-sources {
  local release=$(lsb_release -cs)
  sudo tee /etc/apt/sources.list > /dev/null << EOF
deb http://deb.debian.org/debian $release main
deb https://security.debian.org/ $release-security main
EOF
}

function upgrade-system {
  local path=/var/lib/apt/upgraded
  [[ ! -f $path ]] || return 0

  sudo apt update
  sudo APT_LISTCHANGES_FRONTEND=none DEBIAN_FRONTEND=noninteractive apt -y -o Dpkg::Options::=--force-confnew full-upgrade
  sudo apt -y autoremove --purge

  sudo touch "$path"
}

function install-packages {
  local packages=(
    aria2
    bsd-mailx
    certbot
    git
    man-db
    msmtp-mta
    ncdu
    nginx-light
    rss2email
    rsync
    tmux
    ufw
    unattended-upgrades
  )
  dpkg -s "${packages[@]}" &> /dev/null || sudo apt -y install "${packages[@]}"
}

function add-notes-key {
  local line='command="git-shell -c \"$SSH_ORIGINAL_COMMAND\"" ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDl6Kwgr7jj0ZchaHfAj1PUgkgVKQTuPoTnw0tQ9ef2mQv2fKDCW2ZCA3LM5/cIuMupgJWd35RnP6i6oI58IYEC+wNcf8Fa3GvMg4woUVWqalf8fo7SFJMA7NhbEjT0W7ui05I2nR5+FYMtelIQRioTs4NuRu7xZP8UcCAT0r9D6VQtcB3CPhA2HHokvdypcTFd/Nt8k1Sh02XsQSVsgBydZ5nKfFLBqpS5GEFjwTXgjQVpntyMmG0W/+f7GllpANnlgBIBWwaCPJcaWKmPPHFGY3uZJ4HGiQsG/fVEdqjjlEsfRQPkWZwEmK6SknVgFGgKf3HXZWVSRg5T1JRAwvSYb4pP22tnrp74Dc3TG6JSAjVAvRL/FusReswKy5Qj08FbqGqNEI/o6C/UW/ZOGSNeAkQt4iEj+Ianzkb0202ywxbkOEqLyk4wWxx0jCWSyRhiZWQvBaZTG1UA4pu4IQP8Kascrswij5v5NlkizgtlpWR/YxpiX9tiIXQp3JPTfYk= notes'
  local path=~/.ssh/authorized_keys
  grep -Fqx "$line" "$path" || echo "$line" >> "$path"
}

function configure-msmtp {
  local aliases=/etc/aliases
  sudo tee "$aliases" > /dev/null <<< "default: $email"

  local netrc=~/.netrc
  local filename=${netrc#~/.}
  sudo ln -fs "$netrc" /etc/"$filename"

  local host=$(grep -Po '(?<=\bmachine\s)\s*mail\.[^\s]+' "$netrc")
  sudo tee /etc/msmtprc > /dev/null << EOF
account default
  aliases $aliases
  auth on
  from $email
  host $host
  port 587
  tls on
  tls_trust_file /etc/ssl/certs/ca-certificates.crt
  user $email
EOF

  sudo tee /etc/cron.d/dead-letter > /dev/null <<< '0 * * * * '"$USER"' path=~/dead.letter && [ -f "$path" ] && mail -s "${path##*/}" "$LOGNAME" < "$path" && rm "$path"'
}

function configure-ufw {
  local output=$(sudo ufw status)

  local port
  for port in 22 80 443; do
    grep -q "^$port " <<< "$output" || sudo ufw allow "$port"
  done

  ! grep -q ' active$' <<< "$output" || return 0
  yes | sudo ufw enable
}

function configure-unattended-upgrades {
  sudo sed -i 's/^\/*\(Unattended-Upgrade::Automatic-Reboot "\)[^"]*/\1true/' /etc/apt/apt.conf.d/50unattended-upgrades
}

function schedule-rss2email {
  local command=r2e
  sudo tee /etc/cron.d/"$command" > /dev/null << EOF
0 */3 * * * $USER $command run > /dev/null 2>&1
0 1 * * 0 $USER $command run 2>&1 | grep -v '^sax parsing error:'
EOF
}

function download-dotfile {
  local relative_path=$1

  local path=~/$relative_path
  [[ ! -f $path ]] || return 0

  local directory=${path%/*}
  mkdir -p "$directory"

  wget -O "$path" https://raw.githubusercontent.com/sgtpep/dotfiles/master/"$relative_path"

  [[ $path != ~/.local/bin/* ]] || chmod +x "$path"
}

function setup-gallery {
  local command=generate-gallery
  download-dotfile .local/bin/"$command"

  sudo tee /etc/cron.d/"$command" > /dev/null << EOF
PATH=/usr/bin:/bin:$HOME/.local/bin
0 0 */5 * * $USER $command ~/.config/gallery/config ~/www/gallery
0 0 */5 * * $USER $command ~/.config/*-gallery/config ~/www/*-gallery
EOF
}

function setup-certbot {
  local name=post-hook
  local path=$letsencrypt/cli.ini
  grep -q "^$name " "$path" || sudo tee -a "$path" > /dev/null <<< $'\n'"$name = systemctl reload nginx"

  [[ -d $letsencrypt/live ]] || sudo certbot certonly -d "$hostname" -m "$email" -w "$root" --agree-tos --no-eff-email --webroot
}

function configure-nginx {
  local path=/etc/nginx/sites-enabled/default
  local checksum=$(md5sum "$path")

  local certificate=$letsencrypt/live/$hostname
  sudo tee "$path" > /dev/null << EOF
server_tokens off;

server {
  return 301 https://\$host\$request_uri;
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  add_header Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload';
  gzip on;
  root $root;
  ssl_certificate $certificate/fullchain.pem;
  ssl_certificate_key $certificate/privkey.pem;

  location ~ ^/(favicon\.ico|robots\.txt)$ {
    access_log off;
    log_not_found off;
  }

  location ~ ^/([^/]+-archive|(?:|[^/]+-)gallery)/ {
    auth_basic 'Log In';
    auth_basic_user_file $HOME/.config/\$1/htpasswd;
  }

  location /public {
    autoindex on;
    charset UTF-8;
  }
}
EOF

  md5sum -c --status <<< "$checksum" || sudo systemctl reload nginx
}

function setup-nginx {
  setup-certbot
  configure-nginx

  sudo rm -fr "$root"
  sudo ln -fs ~/www "$root"

  sudo usermod -a -G adm "$USER"
}

function setup-tasks {
  local command=tasks
  download-dotfile .local/bin/"$command"

  local mail='mail -E -a "Date: $(date -R)" -s'
  sudo tee /etc/cron.d/"$command" > /dev/null << EOF
PATH=/usr/bin:/bin:$HOME/.local/bin
0 5 * * * $USER $command today | $mail Today "\$LOGNAME"
0 5 * * * $USER $command tomorrow | $mail Tomorrow "\$LOGNAME"
0 5 * * 0 $USER $command | $mail Week "\$LOGNAME"
EOF
}

function setup-system {
  add-notes-key
  configure-msmtp
  configure-ufw
  configure-unattended-upgrades
  schedule-rss2email
  setup-gallery
  setup-nginx
  setup-tasks
}

function confirm-reboot {
  [[ -f /run/reboot-required ]] || return 0

  read -p 'Reboot? [Y/n] '
  [[ ! $REPLY =~ ^[Yy]*$ ]] || sudo reboot
}

function main {
  if [[ ! -v SSH_CONNECTION ]]; then
    if [[ $@ ]]; then
      run-actions "$@"
      exit
    fi

    setup-user
    run-script
    exit
  fi

  configure-apt-sources
  upgrade-system
  install-packages
  setup-system
  confirm-reboot
}

[[ ! -v SSH_CONNECTION && ${BASH_SOURCE[0]} != $0 ]] || main "$@"
