#!/bin/bash
set -eu

function install-packages {
  local packages=(
    apcalc
    aria2
    bash{,-completion}
    curl
    git
    gnupg
    graphicsmagick-imagemagick-compat
    magic-wormhole
    man-db
    mutt
    ncal
    ncdu
    openssh-client
    pass
    python3-pip
    rclone fuse
    ripgrep
    rsync
    sdcv
    sshuttle
    tmux
    unzip
    vifm
    vim-gtk
    w3m
    wget
    xsel
    zip
  )
  dpkg -s "${packages[@]}" &> /dev/null || sudo apt -y install "${packages[@]}"
}

function install-pip-packages {
  local packages=(
    pwdhash.py
  )

  local package
  for package in "${packages[@]}"; do
    local path=~/.pip
    ls "$path"/lib/python*/site-packages/"$package" &> /dev/null || PYTHONUSERBASE=$path pip install "$package"
  done
}

function install-dependencies {
  install-packages
  install-pip-packages
}

# function clone-dotfiles {
#   local path=~/.git
#   [[ ! -d $path ]] || return 0
# 
#   local directory=${path%/*}
#   local git=(git -C "$directory")
#   "${git[@]}" init
#   "${git[@]}" remote add origin https://github.com/sgtpep/dotfiles.git
#   "${git[@]}" fetch
#   "${git[@]}" checkout -f master
#   "${git[@]}" ls-files | grep -Po '.+(?=\.orig$)' | xargs -r -I {} -d '\n' cp ~/{}{.orig,}
# }
# 
# keys_path=/run/media/$USER/keys
# 
# function copy-ssh-key {
#   local path=~/.ssh/id_rsa
#   [[ ! -f $path ]] || return 0
# 
#   local filename=${path##*/}
#   cp "$keys_path"/"$filename" "$path"
#   chmod 600 "$path"
# 
#   until ssh-keygen -p -N '' -f "$path"; do
#     :
#   done
# 
#   sed -i 's|\bhttps://\([^/]*\)/|git@\1:|' ~/.git/config
# }
# 
# function configure-pass {
#   local path=$1/.git/hooks/post-commit
#   cat > "$path" << \EOF
# #!/bin/bash
# set -eu
# 
# git pull
# git push
# EOF
#   chmod +x "$path"
# }
# 
# function clone-repositories {
#   declare -A repositories=(
#     [notes]=~/notes
#     [pass]=~/.password-store
#   )
# 
#   local name
#   for name in "${!repositories[@]}"; do
#     local path=${repositories[$name]}
#     [[ ! -d $path ]] || continue
# 
#     git clone personal:repositories/"$name".git "$path"
#   done
# 
#   configure-pass "${repositories[pass]}"
# }
# 
# function copy-netrc {
#   local path=~/.netrc
#   local relative_path=${path#~/}
#   [[ -f $path ]] || scp personal:"$relative_path" "$path"
# }
# 
# function download-dictionaries {
#   local urls=(http://download.huzheng.org/lingvo/stardict-{ER,RE}-LingvoUniversal-2.4.2.tar.bz2)
# 
#   local url
#   for url in "${urls[@]}"; do
#     local filename=${url##*/}
#     local path=~/.stardict/dic/${filename%.*.*}
#     [[ ! -d $path ]] || continue
# 
#     local directory=${path%/*}
#     mkdir -p "$directory"
#     wget -O - "$url" | tar -jx -C "$directory"
#   done
# }
# 
# function import-gpg-key {
#   ! ls ~/.gnupg/private-keys-v1.d/*.key &> /dev/null || return 0
# 
#   gpg ${PASSPHRASE+--batch --passphrase "$PASSPHRASE"} --import "$keys_path"/private-key.asc
# 
#   local ownertrust="$(gpg -k --with-colons | grep -Po -m 1 '(?<=^fpr:::::::::)[^:]+'):6:"
#   gpg --import-ownertrust <<< "$ownertrust"
# }
# 
# function setup-system {
#   clone-repositories
#   copy-netrc
#   download-dictionaries
#   import-gpg-key
# }

function main {
  install-dependencies
  clone-dotfiles
  # copy-ssh-key
  # setup-system
}

[[ -v BASH_SOURCE[0] && ${BASH_SOURCE[0]##*/} != ${0##*/} ]] || main "$@"
