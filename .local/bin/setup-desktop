#!/bin/bash
set -eu

function append {
  grep -Fqx "$2" "$1" || sudo tee -a "$1" > /dev/null <<< $2
}

boot_config=/boot/config.txt

function clone-dotfiles {
  if [[ ! -d ~/.git ]]; then
    install-packages git
    "${dotfiles_git[@]}" init
    if [[ -f ~/.ssh/id_rsa ]]; then
      local url=git@$repository_hostname:$repository.git
    else
      local url=https://${repository%/*}@$repository_hostname/$repository.git
    fi
    "${dotfiles_git[@]}" remote add origin "$url"
    "${dotfiles_git[@]}" fetch
    "${dotfiles_git[@]}" checkout -f master
    "${dotfiles_git[@]}" ls-files | grep -Po '.+(?=\.orig$)' | xargs -r -I {} -d '\n' cp ~/{}{.orig,}
    remove-license
  fi
}

function configure-console-font {
  local path=/etc/default/console-setup
  local checksum=$(md5sum "$path")
  sudo sed -i 's/^\(FONTFACE="\)[^"]*/\1VGA/' "$path"
  md5sum -c --status <<< $checksum || sudo setupcon --save-only
}

function configure-display {
  append "$boot_config" 'display_lcd_rotate=2'
  append "$boot_config" 'dtoverlay=rpi-ft5406,touchscreen-inverted-x=1,touchscreen-inverted-y=1'
  local path=~/.config/fontconfig/conf.d/50-display.conf
  mkdir -p "${path%/*}"
  cat > "$path" << \EOF
<fontconfig>
  <match>
    <edit name="aspect">
      <double>0.95</double>
    </edit>
    <edit name="rgba">
      <const>bgr</const>
    </edit>
    <edit name="width">
      <const>semicondensed</const>
    </edit>
  </match>
</fontconfig>
EOF
}

function configure-grub {
  local path=/etc/default/grub
  local checksum=$(md5sum "$path")
  append "$path" 'GRUB_TIMEOUT_STYLE=hidden'
  sudo sed -i -f - "$path" << \EOF
s/^#*\(GRUB_TERMINAL=\).*/\1console/
s/^\(GRUB_CMDLINE_LINUX_DEFAULT\)=.*/\1="quiet loglevel=3"/
s/^\(GRUB_TIMEOUT=\).*/\11/
EOF
  md5sum -c --status <<< $checksum || sudo update-grub
}

function configure-hostname {
  local hostname=localhost
  [[ $(< /etc/hostname) == $hostname ]] || sudo hostnamectl set-hostname "$hostname"
}

function configure-inotify {
  sudo tee /etc/sysctl.d/50-inotify.conf > /dev/null <<< 'fs.inotify.max_user_watches = 524288'
}

function configure-keyboard {
  sudo sed -i -f - /etc/default/keyboard << \EOF
s/^\(XKBLAYOUT="\)[^"]*/\1us,ru/
s/^\(XKBOPTIONS="\)[^"]*/\1ctrl:nocaps,grp:rshift_toggle,grp:switch,lv3:switch,misc:typo/
EOF
}

function configure-locale {
  local locale=en_US.UTF-8
  sudo sed -i "s/^[^#]/# \0/; s/^#* *\(${locale/./\\.} \)/\1/" /etc/locale.gen
  local path=/etc/default/locale
  if [[ $(< "$path") != *=$locale ]]; then
    sudo locale-gen
    sudo tee "$path" > /dev/null <<< "LANG=$locale"
  fi
}

function configure-nopasswd {
  declare -A commands=(
    [apt-install]='/usr/bin/apt -y install *'
    [apt-update]='/usr/bin/apt update'
    [poweroff]=$(raspbian || echo /usr)/sbin/poweroff
    [screensaver]='/usr/bin/xss-lock -n screensaver true'
    [sshuttle]='/usr/bin/env PYTHONPATH=/usr/lib/python3/dist-packages /usr/bin/python3 /usr/bin/sshuttle --method auto --firewall'
  )
  local name
  for name in "${!commands[@]}"; do
    sudo tee /etc/sudoers.d/"$name" > /dev/null <<< "%sudo ALL = NOPASSWD: SETENV: ${commands[$name]}"
  done
}

function configure-timezone {
  sudo ln -fs /usr/share/zoneinfo/"$timezone" /etc/localtime
}

function confirm-reboot {
  if [[ $TERM == linux && $XDG_VTNR == 1 ]]; then
    read -p 'Reboot? [Y/n] '
    [[ ! $REPLY =~ ^[Yy]*$ ]] || sudo reboot
  fi
}

function create-user {
  if ! id "$username" &> /dev/null; then
    local groups=$(groups "$raspbian_username")
    groups=${groups#* : * }
    sudo useradd -m -G "${groups// /,}" "$username"
  fi
  sudo grep -q "^$username:\\$" /etc/shadow || sudo passwd "$username"
}

function disable-bluetooth {
  append "$boot_config" 'dtoverlay=disable-bt'
}

function disable-boot-delay {
  append "$boot_config" 'boot_delay=0'
  append "$boot_config" 'disable_splash=1'
}

function disable-dhcp-wait {
  sudo rm -f /etc/systemd/system/dhcpcd.service.d/wait.conf
}

function disable-ipv6 {
  sudo tee /etc/sysctl.d/50-disable-ipv6.conf > /dev/null <<< 'net.ipv6.conf.all.disable_ipv6 = 1'
}

dotfiles_git=(git -C ~)

function enable-area {
  local path=/etc/apt/sources.list.d/$1${2+-$2}.list
  if [[ ! -f $path ]]; then
    sudo tee "$path" > /dev/null <<< "deb http://deb.debian.org/debian $(lsb_release -cs)${2+-$2} $1"
    sudo apt update -o APT::Get::List-Cleanup=0 -o Dir::Etc::sourcelist="$path" -o Dir::Etc::sourceparts=-
  fi
}

function enable-autologin {
  local path=/etc/systemd/system/getty@tty1.service.d
  sudo mkdir -p "$path"
  sudo tee "$path"/autologin.conf > /dev/null << EOF
[Service]
ExecStart=
ExecStart=-$(raspbian || echo /usr)/sbin/agetty -a $USER %I
EOF
}

function enable-fstrim {
  sudo ln -fs /lib/systemd/system/fstrim.timer /etc/systemd/system/timers.target.wants
}

function fix-efi {
  local path=/boot/efi/EFI
  sudo mkdir -p "$path"/boot
  sudo cp "$path"/{debian/grub,boot/boot}x64.efi
}

function install-packages {
  update-apt
  dpkg -s "${@%/*}" &> /dev/null || sudo apt -y install "$@"
}

function install-unattended-upgrades {
  install-packages unattended-upgrades
}

function lock-user {
  sudo grep -q "^$raspbian_username:!" /etc/shadow || sudo usermod -L -e 1970-01-02 "$raspbian_username"
}

function main {
  if raspbian && [[ $USER == $raspbian_username ]]; then
    create-user
    run-script
    lock-user
  else
    clone-dotfiles
    setup-system
    upgrade-system
    confirm-reboot
  fi
}

function raspbian {
  [[ $(< /etc/os-release) == *=raspbian* ]]
}

raspbian_username=pi

function remove-license {
  local path=~/LICENSE
  rm -f "$path"
  "${dotfiles_git[@]}" update-index --assume-unchanged "$path"
}

repository=sgtpep/dotfiles

repository_hostname=github.com

function run-script {
  sudo -u "$username" bash -"$-" -c '. <(curl https://raw.githubusercontent.com/"$1"/master/.local/bin/setup-desktop) && main' -- "$repository"
}

function schedule-syncing {
  local command=sync-cron
  sudo tee /etc/cron.d/"$command" > /dev/null << EOF
PATH=/usr/bin:/bin:$HOME/.local/bin
10 * * * * $USER $command
EOF
}

function setup-acpid {
  install-packages acpid
  sudo ln -fs /lib/systemd/system/acpid.service /etc/systemd/system/multi-user.target.wants
  sudo ln -fs /usr/share/doc/acpid/examples/default /etc/acpi/events
  local path=/etc/acpi/default.sh
  sudo tee "$path" > /dev/null << \EOF
#!/bin/bash
set -eu
if [[ $1 == video/brightness* ]]; then
  if [[ $1 == *down ]]; then
    operation=-
  elif [[ $1 == *up ]]; then
    operation=+
  fi
  path=(/sys/class/backlight/*/brightness)
  brightness=$(($(< "$path") $operation 1))
  echo "$brightness" > "$path"
fi
EOF
  sudo chmod +x "$path"
}

function setup-cups {
  install-packages cups
  sudo usermod -a -G lpadmin "$USER"
  ! raspbian || setup-printer
}

function setup-debian {
  if ! raspbian; then
    configure-console-font
    configure-grub
  fi
}

function setup-printer {
  local name=HP_Ink_Tank_Wireless_410_series
  if ! lpstat -p "$name" &>/dev/null; then
    local url=$(sudo lpinfo -v | grep -o -m 1 "\bdnssd://${name//_/%20}.*" || :)
    if [[ $url ]]; then
      install-packages hplip
      sudo lpadmin -m drv:///hpcups.drv/hp-ink_tank_wireless_410_series.ppd -o PageSize=A4 -p "$name" -v "$url" -E
      sudo lpadmin -d "$name"
    fi
  fi
}

function setup-raspbian {
  if raspbian; then
    configure-display
    configure-hostname
    configure-locale
    configure-timezone
    disable-bluetooth
    disable-boot-delay
    disable-dhcp-wait
    setup-screensaver
    silence-boot
  fi
}

function setup-screensaver {
  install-packages xss-lock
  sudo tee /usr/sbin/screensaver > /dev/null << \EOF
#!/bin/bash
set -eu
path=/sys/class/backlight/rpi_backlight/bl_power
echo 1 > "$path"
trap "echo 0 > $path" HUP
sleep infinity &
wait
EOF
  sudo chmod +x /usr/sbin/screensaver
}

function setup-system {
  configure-inotify
  configure-keyboard
  configure-nopasswd
  disable-ipv6
  enable-autologin
  enable-fstrim
  install-unattended-upgrades
  schedule-syncing
  setup-acpid
  setup-cups
  setup-debian
  setup-raspbian
  setup-virtualbox
}

function setup-virtualbox {
  if virtualbox; then
    fix-efi
    setup-virtualbox-guest
  fi
}

function setup-virtualbox-guest {
  enable-area non-free
  install-packages dkms ntp virtualbox-guest-additions-iso
  if ! ls /opt/VBoxGuestAdditions-* &> /dev/null; then
    sudo mount -o ro /usr/share/virtualbox/VBoxGuestAdditions.iso /mnt
    sudo /mnt/VBoxLinuxAdditions.run || :
    sudo umount /mnt
  fi
  sudo usermod -a -G vboxsf "$USER"
}

function silence-boot {
  sudo sed -i -f - /boot/cmdline.txt << \EOF
s/\b\(console=tty\)[^ ]*/\112/
s/\( rootwait\)\b.*$/\1 loglevel=3 logo.nologo/
EOF
}

timezone=Europe/Moscow

function update-apt {
  [[ ! $(find /var/cache/apt/pkgcache.bin -mtime +7 2>&1) ]] || sudo apt update
}

function upgrade-system {
  local path=/var/lib/apt/upgraded
  if [[ ! -f $path ]]; then
    update-apt
    sudo APT_LISTCHANGES_FRONTEND=none DEBIAN_FRONTEND=noninteractive apt -y -o Dpkg::Options::=--force-confnew full-upgrade
    sudo apt -y autoremove --purge
    sudo touch "$path"
  fi
}

username=danil

function virtualbox {
  local path=/sys/class/dmi/id/product_name
  [[ -f $path && $(< "$path") == VirtualBox ]]
}

[[ -v BASH_SOURCE[0] && ${BASH_SOURCE[0]##*/} != ${0##*/} ]] || main "$@"
