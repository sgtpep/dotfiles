#!/bin/bash
set -eu

function install-packages {
  local packages=(
    apcalc
    avahi-daemon
    bash
    bash-completion
    bsdmainutils
    curl
    git
    htop
    man
    mutt
    ncdu
    openssh-client
    openssh-server
    pass
    python3-pip
    rclone
    ripgrep
    rsync
    sdcv
    sshuttle
    tmux
    ufw
    unzip
    vifm
    w3m
    wget
  )
  local dpkg_packages=(${packages[@]/%*-})
  dpkg -s "${dpkg_packages[@]}" &> /dev/null || sudo DEBIAN_FRONTEND=noninteractive apt -y install "${packages[@]}"
}

function install-pip-packages {
  local packages=(
    pwdhash.py
    youtube_dl
  )
  local package
  for package in "${packages[@]}"; do
    local path=~/.pip
    ls "$path"/lib/python3.*/site-packages/"$package" &> /dev/null || PYTHONUSERBASE=$path pip3 install "$package"
  done
}

function install-node {
  local prefix=~/.npm
  [[ ! -x $prefix/bin/node ]] || return 0

  local arch=$(arch)
  arch=${arch/aarch64/arm64}
  arch=${arch/x86_64/x64}

  local version=14.0.0
  local url=https://nodejs.org/dist/v$version/node-v$version-linux-$arch.tar.xz
  local path=$XDG_RUNTIME_DIR/${url##*/}
  wget -O "$path" "$url" || rm -f "$path"
  tar -x -C "${path%/*}" -f "$path"
  NPM_CONFIG_PREFIX=$prefix PATH=${path%.*.*}/bin:$PATH npm install -g node npm
}

function install-npm-completions {
  local path=~/.local/share/bash-completion/completions/npm
  [[ ! -f $path ]] || return 0

  mkdir -p "${path%/*}"
  PATH=~/.npm/bin:$PATH npm completion > "$path"
}

function install-software {
  install-packages
  install-pip-packages
  install-node
  install-npm-completions
}

function clone-dotfiles {
  local path=~/.git
  [[ ! -d $path ]] || return 0

  cd ~
  git init
  git remote add origin https://github.com/sgtpep/dotfiles.git
  git fetch || rm -fr "$path"
  git checkout -f master
  git ls-files | grep -Po '.+(?=\.orig$)' | xargs -r -I {} -d '\n' cp ~/{}{.orig,}
  cd - > /dev/null
}

function configure-ufw {
  local output=$(sudo ufw status)
  local port
  for port in 22 80; do
    grep -q "^$port " <<< $output || sudo ufw allow "$port"
  done
  if ! grep -q ' active$' <<< $output; then
    yes | sudo ufw enable
  fi
}

function setup-system {
  configure-ufw
}

function main {
  install-software
  clone-dotfiles
  setup-system
}

[[ -v BASH_SOURCE[0] && ${BASH_SOURCE[0]##*/} != ${0##*/} ]] || main "$@"
