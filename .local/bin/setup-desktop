#!/bin/bash
set -eu

function enable-non-free {
  local name=non-free
  local path=/etc/apt/sources.list.d/$name.list
  [[ ! -f $path ]] || return 0

  local release=$(lsb_release -cs)
  sudo tee "$path" > /dev/null <<< "deb http://deb.debian.org/debian $release $name"
  sudo apt update -o APT::Get::List-Cleanup=0 -o Dir::Etc::sourcelist="$path" -o Dir::Etc::sourceparts=-
}

function install-packages {
  local packages=(
    acpi
    broadcom-sta-dkms
    chromium
    connman
    firmware-misc-nonfree
    fonts-liberation2
    gimp
    gnome-disk-utility
    lightdm-autologin-greeter
    openbox
    pulseaudio
    pulsemixer
    rxvt-unicode
    suckless-tools
    sxiv
    udiskie
    unclutter-{startup,xfixes}
    xinput
    xsel
    xserver-xorg
    xfce4-power-manager
  )

  [[ ! $@ ]] || packages=("$@")

  enable-non-free
  [[ -d /var/cache/apt/archives ]] || sudo apt update
  dpkg -s "${packages[@]}" &> /dev/null || sudo apt -y install "${packages[@]}"
}

function configure-console-font {
  local path=/etc/default/console-setup
  local checksum=$(md5sum "$path")

  sudo sed -i 's/^\(FONTFACE="\)[^"]*/\1VGA/' "$path"

  md5sum -c --status <<< "$checksum" || sudo setupcon --save-only
}

function configure-fontconfig {
  local path=~/.config/fontconfig/fonts.conf
  local directory=${path%/*}
  mkdir -p "$directory"
  cat > "$path" << \EOF
<fontconfig>
  <match target="font">
    <edit name="rgba">
      <const>rgb</const>
    </edit>
  </match>
  <match>
    <test name="family">
      <string>sans-serif</string>
    </test>
    <edit name="family">
      <string>Liberation Sans</string>
    </edit>
  </match>
</fontconfig>
EOF
}

function configure-grub {
  local path=/etc/default/grub
  local checksum=$(md5sum "$path")

  local line='GRUB_TIMEOUT_STYLE=hidden'
  grep -Fqx "$line" "$path" || sudo tee -a "$path" > /dev/null <<< "$line"

  sudo sed -i -f - "$path" << \EOF
s/^#*\(GRUB_TERMINAL=\).*/\1console/
s/^\(GRUB_CMDLINE_LINUX_DEFAULT\)=.*/\1="acpi_backlight=vendor quiet loglevel=3"/
s/^\(GRUB_TIMEOUT=\).*/\11/
EOF

  md5sum -c --status <<< "$checksum" || sudo update-grub
}

function configure-keyboard {
  sudo sed -i -f - /etc/default/keyboard << \EOF
s/^\(XKBLAYOUT="\)[^"]*/\1us,ru/
s/^\(XKBOPTIONS="\)[^"]*/\1altwin:swap_alt_win,ctrl:nocaps,grp:rshift_toggle,grp:rwin_switch,lv3:ralt_switch,misc:typo/
EOF
}

function configure-libinput {
  sudo tee /etc/X11/xorg.conf.d/50-libinput.conf > /dev/null << \EOF
Section "InputClass"
  Identifier "bcm5974"
  MatchProduct "bcm5974"
  Option "NaturalScrolling" "true"
  Option "Tapping" "true"
EndSection
EOF
}

function configure-openbox {
  local path=~/.config/openbox/rc.xml
  local directory=${path%/*}
  mkdir -p "$directory"
  cat > "$path" << \EOF
<openbox_config>
  <applications>
    <application name="*">
      <decor>no</decor>
    </application>
    <application type="normal">
      <maximized>yes</maximized>
    </application>
  </applications>

  <keyboard>
    <keybind key="A-F4">
      <action name="Close"/>
    </keybind>
    <keybind key="A-Tab">
      <action name="NextWindow">
        <bar>no</bar>
        <dialog>none</dialog>
        <raise>yes</raise>
      </action>
    </keybind>
    <keybind key="A-S-Tab">
      <action name="PreviousWindow">
        <bar>no</bar>
        <dialog>none</dialog>
        <raise>yes</raise>
      </action>
    </keybind>

    <keybind key="XF86AudioMute">
      <action name="Execute">
        <command>sh -c 'pactl set-sink-mute 0 yes; pactl set-sink-volume 0 0; pactl set-source-mute 1 yes'</command>
      </action>
    </keybind>
    <keybind key="XF86AudioLowerVolume">
      <action name="Execute">
        <command>sh -c 'pactl set-sink-mute 0 no; pactl set-sink-volume 0 -10%; pactl set-source-mute 1 no'</command>
      </action>
    </keybind>
    <keybind key="XF86AudioRaiseVolume">
      <action name="Execute">
        <command>sh -c 'pactl set-sink-mute 0 no; pactl set-sink-volume 0 +10%; pactl set-source-mute 1 no'</command>
      </action>
    </keybind>

    <keybind key="C-M-r">
      <action name="Execute">
        <command>dmenu_run -i -fn monospace-13 -nb Black -nf White -sb White -sf Black</command>
      </action>
    </keybind>
  </keyboard>
</openbox_config>
EOF
}

function configure-power-manager {
  local path=~/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-power-manager.xml
  local directory=${path%/*}
  mkdir -p "$directory"
  cat > "$path" << \EOF
<channel name="xfce4-power-manager" version="1.0">
  <property name="xfce4-power-manager" type="empty">
    <property name="blank-on-ac" type="int" value="0"/>
    <property name="blank-on-battery" type="int" value="0"/>
    <property name="brightness-exponential" type="bool" value="true"/>
    <property name="brightness-level-on-ac" type="uint" value="100"/>
    <property name="brightness-level-on-battery" type="uint" value="100"/>
    <property name="brightness-on-battery" type="uint" value="9"/>
    <property name="brightness-step-count" type="uint" value="50"/>
    <property name="brightness-switch" type="int" value="0"/>
    <property name="brightness-switch-restore-on-exit" type="int" value="1"/>
    <property name="critical-power-action" type="uint" value="2"/>
    <property name="critical-power-level" type="uint" value="2"/>
    <property name="dpms-enabled" type="bool" value="true"/>
    <property name="dpms-on-ac-off" type="uint" value="6"/>
    <property name="dpms-on-ac-sleep" type="uint" value="3"/>
    <property name="dpms-on-battery-off" type="uint" value="6"/>
    <property name="dpms-on-battery-sleep" type="uint" value="3"/>
    <property name="general-notification" type="bool" value="false"/>
    <property name="handle-brightness-keys" type="bool" value="true"/>
    <property name="inactivity-on-battery" type="uint" value="15"/>
    <property name="inactivity-sleep-mode-on-ac" type="uint" value="1"/>
    <property name="inactivity-sleep-mode-on-battery" type="uint" value="1"/>
    <property name="lid-action-on-ac" type="uint" value="1"/>
    <property name="lid-action-on-battery" type="uint" value="1"/>
    <property name="lock-screen-suspend-hibernate" type="bool" value="false"/>
    <property name="logind-handle-lid-switch" type="bool" value="false"/>
    <property name="power-button-action" type="uint" value="1"/>
  </property>
</channel>
EOF
}

function disable-lid-wakeup {
  local name=disable-lid-wakeup
  sudo tee /etc/systemd/system/"$name".service > /dev/null << \EOF
[Service]
ExecStart=sh -c 'echo LID0 > /proc/acpi/wakeup'
Type=oneshot

[Install]
WantedBy=default.target
EOF
  sudo systemctl enable "$name"
}


function enable-autologin {
  sudo sed -i "s/^#\(autologin-user=\).*/\1$USER/" /etc/lightdm/lightdm.conf
}

function enable-early-kms {
  local path=/etc/initramfs-tools/modules
  local checksum=$(md5sum "$path")

  local line=i915
  grep -Fqx "$line" "$path" || sudo tee -a "$path" > /dev/null <<< "$line"

  md5sum -c --status <<< "$checksum" || sudo update-initramfs -u
}

function enable-udiskie {
  local name=udiskie
  sudo tee /etc/X11/Xsession.d/50"$name" > /dev/null <<< "$name -N &"
}

function install-facetimehd {
  local name=facetimehd
  ! dpkg -s "$name"-dkms &> /dev/null || return 0

  local name=facetimehd-firmware
  local branch=master
  local path=/tmp/$name-$branch
  local directory=${path%/*}
  wget -O - https://github.com/patjak/"$name"/archive/refs/heads/"$branch".tar.gz | tar -xz -C "$directory"

  cd "$path"
  install-packages cpio curl xz-utils
  make
  sudo make install
  cd - > /dev/null

  local name=bcwc_pcie
  local branch=master
  local path=/tmp/facetimehd-$branch
  local directory=${path%/*}
  wget -O - https://github.com/patjak/"$name"/archive/refs/heads/"$branch".tar.gz | tar -xz -C "$directory"

  local version=0.1
  local source=/usr/src/$name-$version
  sudo mkdir -p "$source"
  sudo cp -r "$path"/* "$source"

  install-packages debhelper dkms
  local module=$name/$version
  sudo dkms add "$module"
  sudo dkms build "$module"
  sudo dkms mkdeb "$module" --source-only

  local dkms=/var/lib/dkms/$name
  local path=/tmp/$name.deb
  cp "$dkms"/*/deb/*-dkms_*_all.deb "$path"
  sudo rm -r "$dkms" "$source"
  sudo dpkg -i "$path"
}

function setup-system {
  configure-console-font
  configure-fontconfig
  configure-grub
  configure-keyboard
  configure-libinput
  configure-openbox
  configure-power-manager
  disable-lid-wakeup
  enable-autologin
  enable-early-kms
  enable-udiskie
  install-facetimehd
}

function main {
  install-packages
  setup-system
}

[[ -v BASH_SOURCE[0] && ${BASH_SOURCE[0]##*/} != ${0##*/} ]] || main "$@"
