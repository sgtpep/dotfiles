#!/bin/bash
set -eu

keys=/run/media/$USER/keys

function enable-rpm-fusion {
  [[ ! -f /etc/yum.repos.d/rpmfusion-free.repo ]] || return 0

  local version=$(rpm -E %fedora)
  sudo dnf -y install https://mirrors.rpmfusion.org/{free/fedora/rpmfusion-free,nonfree/fedora/rpmfusion-nonfree}-release-"$version".noarch.rpm
}

function install-packages {
  local names=(
    ImageMagick
    acpi
    alsa-sof-firmware alsa-ucm
    android-tools
    bash
    bash-completion
    brightnessctl
    bzip2
    calc
    chromium
    clipman
    cups
    curl
    default-fonts-core-emoji
    dejavu-sans-mono-fonts
    dmenu
    dnf5-plugin-automatic
    ffmpeg
    file
    findutils
    foot
    gimp
    git
    glib2
    gnome-disk-utility
    gnupg2
    grep
    gvfs
    gvfs-fuse
    gvfs-mtp
    gzip
    htop
    labwc
    liberation-fonts-all
    libnotify
    mako
    man-db
    mutt
    ncdu
    nodejs
    nodejs-npm
    openssh
    pass
    pass-otp
    perl-Image-ExifTool
    pulseaudio-utils
    python3
    python3-pip
    rclone fuse
    ripgrep
    rlwrap
    rsync
    sdcv
    seatd
    simple-scan
    sqlite
    sshuttle
    swayidle
    swayimg
    swaylock
    tar
    tmux
    unzip
    util-linux
    vifm
    vim-enhanced
    w3m
    which
    wl-clipboard
    wlopm
    zip
  )
  rpm -q "${names[@]}" > /dev/null || sudo dnf -y install "${names[@]}"
}

function remove-packages {
  local names=(openssh-server)
  ! rpm -q "${names[@]}" > /dev/null || sudo dnf -y remove "${names[@]}"
}

function install-copr-packages {
  declare -A repositories=(
    [scrcpy]=zeno/scrcpy
  )
 
  local name
  for name in "${!repositories[@]}"; do
    ! rpm -q "$name" > /dev/null || continue
 
    local repository=${repositories[$name]}
    sudo dnf -y copr enable "$repository"
    sudo dnf -y install "$name"
  done
}

function install-external-packages {
  local -A names=(
    [epson-inkjet-printer-escpr2]=https://download3.ebz.epson.net/dsc/f/03/00/16/90/97/553047888938560dd4d73cae951613459e2a5d5d/epson-inkjet-printer-escpr2-1.2.31-1.x86_64.rpm
    [google-chrome-stable]=https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm
  )

  local name
  for name in "${!names[@]}"; do
    ! rpm -q "$name" > /dev/null || continue

    local url=${names[$name]}
    sudo dnf -y install "$url"
  done
}

function install-pip-packages {
  local names=(
    magic_wormhole
    pwdhash_py
    yt_dlp
  )

  local name
  for name in "${names[@]}"; do
    local pip=~/.pip
    local paths=("$pip"/lib/python*/site-packages/"$name"-*)
    [[ -d ${paths[0]} ]] || PYTHONUSERBASE=$pip pip install --no-warn-script-location "$name"
  done
}

function install-dependencies {
  enable-rpm-fusion
  install-packages
  remove-packages

  install-copr-packages
  install-external-packages
  install-pip-packages
}

function add-printer {
  local name=EPSON_ET-3710_Series
  ! lpstat -p "$name" &>/dev/null || return 0

  local uri=ipps://"${name//_/%20}"._ipps._tcp.local/
  sudo lpadmin -m lsb/usr/epson-inkjet-printer-escpr2/Epson/Epson-ET-3710_Series-epson-inkjet-printer-escpr2.ppd.gz -p "$name" -v "$uri" -E
  sudo lpadmin -d "$name"
}

function block-bluetooth {
  local name=bluetooth
  rfkill -o TYPE,SOFT | grep -q "^$name\s*unblocked$" || return 0

  rfkill block "$name"
}

function configure-grub {
  local path=/etc/default/grub
  local checksum=$(md5sum "$path")

  sudo sed -i 's/^\(GRUB_TIMEOUT=\).*/\11/' "$path"

  md5sum -c --status <<< "$checksum" || sudo grub2-mkconfig -o /boot/grub2/grub.cfg
}

function configure-power-key {
  sudo tee /etc/systemd/logind.conf > /dev/null << \EOF
[Login]
HandlePowerKey=suspend
EOF
}

function enable-autologin {
  local path=/etc/systemd/system/getty@tty1.service.d
  sudo mkdir -p "$path"
  sudo tee "$path"/autologin.conf > /dev/null << EOF
[Service]
ExecStart=
ExecStart=-/usr/sbin/agetty -a $USER %I
EOF
}

function enable-dnf-automatic {
  sudo tee /etc/dnf/automatic.conf > /dev/null << \EOF
[commands]
apply_updates = yes
EOF

  local name=dnf5-automatic.timer
  [[ -h /etc/systemd/system/timers.target.wants/$name ]] || sudo systemctl enable --now "$name"
}

function enable-seatd {
  local name=seatd.service
  [[ -h /etc/systemd/system/multi-user.target.wants/$name ]] || sudo systemctl enable --now "$name"

  sudo usermod -a -G seat "$USER"
}

function fix-audio {
  sudo cp /lib/firmware/intel/sof-tplg/sof-adl-{max98360a,rt1019}-rt5682.tplg.xz

  [[ ! -f /etc/wireplumber/wireplumber.conf.d/51-increase-headroom.conf ]] || return 0

  local temp=/tmp
  local name=chromebook-linux-audio
  local path=$temp/$name
  rm -fr "$path"
  git -C "$temp" clone https://github.com/WeirdTreeThing/"$name".git

  cd "$path"
  ./setup-audio
  cd - > /dev/null
}

function fix-touchpad {
  local path=/etc/libinput
  sudo mkdir -p "$path"
  sudo tee "$path"/local-overrides.quirks > /dev/null << \EOF
[PIXA Touchpad]
MatchName=*PIXA*Touchpad*
AttrResolutionHint=31x31
AttrPressureRange=10:8
EOF
}

function set-plymouth-theme {
  local name=details
  grep -q "^Theme=$name$" /etc/plymouth/plymouthd.conf || sudo plymouth-set-default-theme -R "$name"
}

function configure-system {
  add-printer
  block-bluetooth
  configure-grub
  configure-power-key
  enable-autologin
  enable-dnf-automatic
  enable-seatd
  fix-audio
  fix-touchpad
  set-plymouth-theme
}

function mount-keys {
  ! mountpoint -q "$keys" || return 0

  local label=${keys##*/}
  local path=$(readlink -f /dev/disk/by-label/"$label")
  gio mount -d "$path"
}

function copy-ssh-key {
  local path=~/.ssh/id_rsa
  [[ ! -f $path ]] || return 0

  mount-keys

  local directory=${path%/*}
  mkdir -p "$directory"

  local key=$keys/${path##*/}
  cp "$key" "$path"
  chmod 600 "$path"

  until ssh-keygen -p -N '' -f "$path"; do
    :
  done
}

function clone-dotfiles {
  local path=~/.git
  [[ ! -d $path ]] || return 0

  local directory=${path%/*}
  local command=(git -C "$directory")

  "${command[@]}" init
  "${command[@]}" remote add origin https://github.com/sgtpep/dotfiles.git
  "${command[@]}" fetch
  "${command[@]}" checkout -f master

  "${command[@]}" ls-files | grep -Po '.+(?=\.orig$)' | xargs -r -I {} -d '\n' cp ~/{}{.orig,}

  sed -i 's|\bhttps://\([^/]*\)/|git@\1:|' ~/.git/config
}

function add-pass-hook {
  local path=$1

  local hook=$path/.git/hooks/post-commit
  cat > "$hook" << \EOF
#!/bin/bash
set -eu

git pull
git push
EOF
  chmod +x "$hook"
}

function clone-repositories {
  declare -A names=(
    [notes]=notes
    [pass]=.password-store
  )

  local name
  for name in "${!names[@]}"; do
    local path=~/${names[$name]}
    [[ ! -d $path ]] || continue

    git clone personal:repositories/"$name".git "$path"
  done

  local path=~/${names[pass]}
  add-pass-hook "$path"
}

function configure-gsettings {
  gsettings set org.gnome.desktop.interface enable-animations false
  gsettings set org.gtk.Settings.FileChooser sort-column modified
  gsettings set org.gtk.Settings.FileChooser sort-order descending
}

function copy-netrc {
  local path=~/.netrc
  local relative_path=${path#~/}
  [[ -f $path ]] || scp personal:"$relative_path" "$path"
}

function download-dictionaries {
  local path=~/.stardict/dic
  ! ls "$path"/* &> /dev/null || return 0

  mkdir -p "$path"
  ssh personal cat archive/dictionaries.tar.gz | tar -xz -C "$path"
}

function harden-bash-history {
  local path=~/.bash_history
  touch "$path"
  sudo chattr +a "$path"
}

function import-gpg-key {
  local path=~/.gnupg
  ! ls "$path"/private-keys-v1.d/*.key &> /dev/null || return 0

  mount-keys

  gpg --import "$keys"/private-key.asc

  local output="$(gpg -k --with-colons | grep -Po -m 1 '(?<=^fpr:::::::::)[^:]+'):6:"
  gpg --import-ownertrust <<< "$output"

  chmod 700 "$path"
}

function setup-home {
  clone-repositories
  configure-gsettings
  copy-netrc
  download-dictionaries
  harden-bash-history
  import-gpg-key
}

function confirm-reboot {
  [[ $TERM == linux && $XDG_VTNR == 1 ]] || return 0

  read -p 'Reboot? [Y/n] '
  [[ ! $REPLY =~ ^[Yy]*$ ]] || sudo reboot
}

function main {
  install-dependencies
  configure-system
  copy-ssh-key
  clone-dotfiles
  setup-home
  confirm-reboot
}

[[ ${BASH_SOURCE[0]} != $0 ]] || main "$@"
