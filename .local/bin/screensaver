#!/usr/bin/env python
from dbus.mainloop.glib import DBusGMainLoop
from gi.repository import GLib
import dbus

timeout = 3 * 60 * 1000

DBusGMainLoop(set_as_default=True)
bus = dbus.SessionBus()
idle_monitor_object = bus.get_object('org.gnome.Mutter.IdleMonitor', '/org/gnome/Mutter/IdleMonitor/Core')
idle_monitor_interface = dbus.Interface(idle_monitor_object, 'org.gnome.Mutter.IdleMonitor')
display_config_object = bus.get_object('org.gnome.Mutter.DisplayConfig', '/org/gnome/Mutter/DisplayConfig')

idle_id = idle_monitor_interface.AddIdleWatch(timeout)
active_id = None

def on_watch_fired(id):
    global active_id
    power_save_mode = None
    if id == idle_id:
        active_id = idle_monitor_interface.AddUserActiveWatch()
        power_save_mode = 1
    elif id == active_id:
        power_save_mode = 0

    if power_save_mode is not None:
        display_config_object.Set('org.gnome.Mutter.DisplayConfig', 'PowerSaveMode', power_save_mode, dbus_interface='org.freedesktop.DBus.Properties')

idle_monitor_interface.connect_to_signal('WatchFired', on_watch_fired)
loop = GLib.MainLoop()
loop.run()
